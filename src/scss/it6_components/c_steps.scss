.steps {
	counter-reset: steps;

	.step {
		font-size: var(--stepsFontSize);
		// min 0.8rem
	}

	.step::before {
		counter-increment: steps;
		content: counter(steps);
		display: inline-flex;
		vertical-align: top;
		text-align: center;
		position: relative;
		padding-top: 0.5em;
		background-color: var(--stepBackgroundColor);
		color: var(--stepColor);
		border-radius: 50%;
		align-items: flex-start;
		justify-content: center;
		min-width: 2.5em;
		min-height: 2.5em;
		box-sizing: border-box;
		border: var(--spacing-01) solid var(--backgroundColor);
	}

}

@-moz-document url-prefix() {
	.steps .step::before {
		padding-top: 0.4em;
	}

}

.steps-horizontal {
	display: flex;
	align-items: center;
	justify-content: space-between;
	min-width: min-content;

	&:before,
	.step:not(:first-child):after {
		content: "";
		font-size: inherit;
		display: block;
		height: var(--stepsRuleHeight);
		background-color: var(--stepBackgroundColor);
		width: calc(100% - 1.8em);
		position: absolute;
		left: 0.5em;
		z-index: -1;
	}

	.step {
		display: inline-flex;
		align-items: center;
		justify-content: flex-end;

		&:not(:first-child) {
			flex-grow: 1;

			&:after {
				transform: scaleX(0);
				transform-origin: 0;
				transition: none;
				left: -0.3em;
				z-index: 0;
			}

		}

	}

	.step.selected:before,
	.step.selected:after {
		background-color: var(--stepSelectedBackgroundColor);
		transition: background-color 0.2s 0.4s, color 0s 0.4s;
		color: var(--stepSelectedColor);
	}

	.step.selected:after {
		transform: scaleX(1);
		transition: transform 0.2s 0.2s;
	}

	.step.selected + .step:not(.selected) {
		&:before {
			background-color: var(--stepActiveBackgroundColor);
			color: var(--stepActiveColor);
		}

	}

}
